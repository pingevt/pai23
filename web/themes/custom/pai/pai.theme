<?php

/**
 * @file
 * Theming functionality for PAI Theme.
 */

use Drupal\Core\Render\Markup;

/**
 * Implements hook_preprocess_region().
 */
function pai_preprocess_region(&$variables) {
  $variables['attributes']['class'][] = "region";
  $variables['attributes']['class'][] = "region--" . $variables['elements']['#region'];

  // \Drupal::messenger()->addMessage("hello", "error", FALSE);
  // \Drupal::messenger()->addMessage("hello", "warning", TRUE);
  // \Drupal::messenger()->addMessage("hello", "status", TRUE);
  // \Drupal::messenger()->addMessage("hello", "log", TRUE);
}

/**
 * Implements hook_preprocess_menu().
 */
function pai_preprocess_menu(array &$variables) {
  if ($variables['menu_name'] == 'social-menu') {
    foreach ($variables['items'] as $idx => &$item) {
      $menu_entity = $item['entity'];
      $icon_field = $menu_entity->get('field_icon');
      $variables['items'][$idx]['icon'] = Markup::create($icon_field->entity->field_svg_data->value);

      $item['url']->mergeOptions([
        'attributes' => [],
      ]);
    }
  }
}

/**
 * Implements hook_preprocess_menu().
 */
function pai_preprocess_node(array &$variables) {
  $node = $variables['elements']['#node'];
  $bundle = $node->bundle();

  $variables['content_attributes']['class'][] = "node-content";

  if ($node->hasField('field_display_title')) {
    // Title.
    $title = $node->label();
    $display_title = $node->field_display_title->getValue();

    if (!empty($display_title)) {
      $display_title = current($display_title);
      $title = preg_replace("/<\\/?p(.|\\s)*?>/", "", $display_title['value']);
      $variables['label'] = Markup::create($title);
    }
  }

  // ksm($variables);
}
