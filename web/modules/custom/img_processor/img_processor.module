<?php

/**
 * @file
 * This is the module that processes image color data.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\img_processor\Event\MediaPresaveEvent;
use Drupal\media\MediaInterface;

/**
 * Implements hook_entity_presave().
 */
function img_processor_entity_presave(EntityInterface $entity) {
  if ($entity instanceof MediaInterface) {
    // Instantiate our event.
    $event = new MediaPresaveEvent($entity);

    // Get the event_dispatcher service and dispatch the event.
    $event_dispatcher = \Drupal::service('event_dispatcher');
    $event_dispatcher->dispatch($event, MediaPresaveEvent::EVENT_NAME);
  }
}

/**
 * Implements hook_entity_insert().
 */
function img_processor_entity_insert(EntityInterface $entity) {
  if ($entity instanceof MediaInterface) {
    img_processor_media_update_processor_data($entity);
  }
}

/**
 * Implements hook_entity_update().
 */
function img_processor_entity_update(EntityInterface $entity) {
  if ($entity instanceof MediaInterface) {
    img_processor_media_update_processor_data($entity);
  }
}

/**
 * Process Media items when they are saved.
 */
function img_processor_media_update_processor_data(EntityInterface $entity) {
  if ($entity instanceof MediaInterface && isset($entity->img_processor_data)) {
    $connection = \Drupal::database();

    // Delete old records.
    // phpcs:ignore
    $delete_num = $connection->delete('img_processor_data')
      ->condition("mid", $entity->id())
      ->execute();

    // Add new records.
    $insert = $connection->insert('img_processor_data')
      // ->fields($entity->img_processor_data)
      ->fields([
        'mid',
        'bin_color',
        'media_color',
        'color_distance',
        'hue_distance',
      ]);
    foreach ($entity->img_processor_data as $row) {
      $row['mid'] = $entity->id();
      $insert->values($row);
    }

    $insert->execute();
  }
}

/**
 * Implements hook_entity_load().
 */
function img_processor_entity_load(array $entities, $entity_type_id) {
  foreach ($entities as $entity) {
    if ($entity instanceof MediaInterface) {
      $database = \Drupal::database();
      $query = $database->query("SELECT * FROM {img_processor_data} WHERE mid = " . $entity->id());

      $result = $query->fetchAll(PDO::FETCH_ASSOC);
      $entity->img_processor_data = $result;
    }
  }
}
