<?php

/**
 * @file
 * This is the module file for pai_utility.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\BubbleableMetadata;
use Drupal\Core\Render\Element;

/**
 * Impliments hook_form_alter()
 */
function pai_utility_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  if ($form_id == "views_exposed_form") {

    // $view = $form_state->get('view');
    if (isset($form['tid'])) {
      $form['tid']['#process'][] = "pai_utility_process_term_checkboxes";
    }
  }
}

/**
 * Processes checkboxes for filtering.
 */
function pai_utility_process_term_checkboxes(&$element, FormStateInterface $form_state, &$complete_form) {

  foreach (Element::children($element) as $key) {
    $term = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($key);

    if ($term->hasField('field_theme_slug')) {
      $element[$key]['#wrapper_attributes']['class'][] = "u-tag-theme--" . $term->field_theme_slug->value;
    }
  }

  return $element;
}

/**
 * Impliments hook_entity_type_alter()
 */
function pai_utility_entity_type_alter(&$entity_types) {
  // Override class to change label.
  $entity_types['taxonomy_term']->setClass(\Drupal\pai_utility\Entity\TaxonomyTerm::class);
}

/**
 * Implements hook_token_info().
 */
function pai_utility_token_info() {

  $node['title-with-override'] = [
    'name' => t("Display Title"),
    'description' => t("Display Title or Node Title"),
  ];

  return [
    'types' => [],
    'tokens' => [
      'node' => $node,
    ],
  ];
}

/**
 * Implements hook_tokens().
 */
function pai_utility_tokens($type, $tokens, array $data, array $options, BubbleableMetadata $bubbleable_metadata) {
  $replacements = [];

  if ($type == 'node' && !empty($data['node'])) {
    /** @var \Drupal\node\NodeInterface $node */
    $node = $data['node'];

    foreach ($tokens as $name => $original) {
      switch ($name) {
        case 'title-with-override':
          $replacements[$original] = $node->getTitle();
          if ($node->hasField('field_display_title') && !empty($node->field_display_title->value)) {
            $val = $node->field_display_title->value;

            $val = str_replace('&nbsp;', ' ', $val);
            $summary = strip_tags($val);

            $replacements[$original] = $summary;
          }

          break;
      }
    }
  }

  return $replacements;
}
